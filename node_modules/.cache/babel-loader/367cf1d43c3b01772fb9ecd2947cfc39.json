{"ast":null,"code":"import { createReducer, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const setCart = createAsyncThunk(\"SET_CART\", async (data, thunkAPI) => {\n  const {\n    id,\n    token\n  } = data;\n  const req = await axios.post(`/api/cart/${id}`, {\n    headers: {\n      authorization: token\n    }\n  });\n  return req.data;\n});\nexport const setCartVoid = createAction(\"AbadaKedabra\", () => {});\nconst SetCartReducer = createReducer({}, {\n  [setCart.fulfilled]: (state, action) => action.payload,\n  [setCartVoid]: (state, action) => action.payload\n});\nexport default SetCartReducer;","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/store/setCarReducer.js"],"names":["createReducer","createAsyncThunk","createAction","axios","setCart","data","thunkAPI","id","token","req","post","headers","authorization","setCartVoid","SetCartReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,YAA1C,QAA8D,kBAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGH,gBAAgB,CAAC,UAAD,EAAa,OAAOI,IAAP,EAAaC,QAAb,KAA0B;AAC5E,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAgBH,IAAtB;AAEA,QAAMI,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAY,aAAYH,EAAG,EAA3B,EAA8B;AAC9CI,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEJ;AAAjB;AADqC,GAA9B,CAAlB;AAIA,SAAOC,GAAG,CAACJ,IAAX;AACD,CARsC,CAAhC;AAUP,OAAO,MAAMQ,WAAW,GAAGX,YAAY,CAAC,cAAD,EAAiB,MAAM,CAAE,CAAzB,CAAhC;AAEP,MAAMY,cAAc,GAAGd,aAAa,CAAC,EAAD,EAAK;AACvC,GAACI,OAAO,CAACW,SAAT,GAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADR;AAEvC,GAACL,WAAD,GAAe,CAACG,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAFF,CAAL,CAApC;AAKA,eAAeJ,cAAf","sourcesContent":["import { createReducer, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const setCart = createAsyncThunk(\"SET_CART\", async (data, thunkAPI) => {\n  const { id, token } = data;\n\n  const req = await axios.post(`/api/cart/${id}`, {\n    headers: { authorization: token },\n  });\n\n  return req.data;\n});\n\nexport const setCartVoid = createAction(\"AbadaKedabra\", () => {})\n\nconst SetCartReducer = createReducer({}, {\n  [setCart.fulfilled]: (state, action) => action.payload,\n  [setCartVoid]: (state, action) => action.payload\n});\n\nexport default SetCartReducer;\n"]},"metadata":{},"sourceType":"module"}