{"ast":null,"code":"import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getProductFromDbAndSetQuantities, getCartItems } from \"../utils\";\nexport const setOrdenConItems = createAsyncThunk(\"set_OrdenConItems\", async (data, thunkAPI) => {\n  try {\n    const {\n      ordenes,\n      token\n    } = thunkAPI.getState();\n    const ordenItems = await Promise.all(ordenes.map(orden => {\n      return getCartItems(orden.id, token);\n    }));\n    const ordenConItems = await Promise.all(ordenItems.map(oneOrdenItems => {\n      return getProductFromDbAndSetQuantities(oneOrdenItems);\n    }));\n    const result = ordenes.map((orden, i) => ({\n      id: orden.id,\n      products: ordenConItems[i]\n    }));\n    return result; // ordenes.map((orden) => {\n    //     getCartItems(orden.id, token)\n    // .then((data) => {\n    //     return getProductFromDbAndSetQuantities(data);\n    // })\n    // .then((productos) => {\n    //     setOrdenConItems((state) => [\n    //         ...state,\n    //         { ordenId: orden.id, productos },\n    //     ]);\n    // });\n    // });\n  } catch (err) {\n    throw err;\n  }\n});\nconst ordenConItemsReducer = createReducer([], {\n  [setOrdenConItems.fulfilled]: (state, action) => action.payload\n});\nexport default ordenConItemsReducer;","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/store/ordenConItems.js"],"names":["createReducer","createAsyncThunk","getProductFromDbAndSetQuantities","getCartItems","setOrdenConItems","data","thunkAPI","ordenes","token","getState","ordenItems","Promise","all","map","orden","id","ordenConItems","oneOrdenItems","result","i","products","err","ordenConItemsReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AACA,SAASC,gCAAT,EAA2CC,YAA3C,QAA+D,UAA/D;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAAC,mBAAD,EAAsB,OAAOI,IAAP,EAAaC,QAAb,KAA0B;AAC5F,MAAI;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqBF,QAAQ,CAACG,QAAT,EAA3B;AACA,UAAMC,UAAU,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBL,OAAO,CAACM,GAAR,CAAaC,KAAD,IAAW;AACnB,aAAOX,YAAY,CAACW,KAAK,CAACC,EAAP,EAAWP,KAAX,CAAnB;AACH,KAFD,CADqB,CAAzB;AAKA,UAAMQ,aAAa,GAAG,MAAML,OAAO,CAACC,GAAR,CACxBF,UAAU,CAACG,GAAX,CAAgBI,aAAD,IAAmB;AAC9B,aAAOf,gCAAgC,CAACe,aAAD,CAAvC;AACH,KAFD,CADwB,CAA5B;AAMA,UAAMC,MAAM,GAAGX,OAAO,CAACM,GAAR,CAAY,CAACC,KAAD,EAAQK,CAAR,MAAe;AACtCJ,MAAAA,EAAE,EAAED,KAAK,CAACC,EAD4B;AAEtCK,MAAAA,QAAQ,EAAEJ,aAAa,CAACG,CAAD;AAFe,KAAf,CAAZ,CAAf;AAKA,WAAOD,MAAP,CAlBA,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA/BD,CA+BE,OAAOG,GAAP,EAAY;AACV,UAAMA,GAAN;AACH;AACJ,CAnC+C,CAAzC;AAqCP,MAAMC,oBAAoB,GAAGtB,aAAa,CAAC,EAAD,EAAK;AAC3C,GAACI,gBAAgB,CAACmB,SAAlB,GAA8B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADb,CAAL,CAA1C;AAKA,eAAeJ,oBAAf","sourcesContent":["import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getProductFromDbAndSetQuantities, getCartItems } from \"../utils\";\n\nexport const setOrdenConItems = createAsyncThunk(\"set_OrdenConItems\", async (data, thunkAPI) => {\n    try {\n        const { ordenes, token } = thunkAPI.getState()\n        const ordenItems = await Promise.all(\n            ordenes.map((orden) => {\n                return getCartItems(orden.id, token)\n            })\n        );\n        const ordenConItems = await Promise.all(\n            ordenItems.map((oneOrdenItems) => {\n                return getProductFromDbAndSetQuantities(oneOrdenItems)\n            })\n        );\n\n        const result = ordenes.map((orden, i) => ({\n            id: orden.id,\n            products: ordenConItems[i],\n        }))\n\n        return result\n        // ordenes.map((orden) => {\n        //     getCartItems(orden.id, token)\n        // .then((data) => {\n        //     return getProductFromDbAndSetQuantities(data);\n        // })\n        // .then((productos) => {\n        //     setOrdenConItems((state) => [\n        //         ...state,\n        //         { ordenId: orden.id, productos },\n        //     ]);\n        // });\n        // });\n    } catch (err) {\n        throw err;\n    }\n});\n\nconst ordenConItemsReducer = createReducer([], {\n    [setOrdenConItems.fulfilled]: (state, action) => action.payload,\n}\n);\n\nexport default ordenConItemsReducer;"]},"metadata":{},"sourceType":"module"}