{"ast":null,"code":"import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setLogginFalse, setLogginTrue } from \"./authReducer\";\nimport { getItems } from \"./cartReducer\";\nimport { setCart } from \"./setCarReducer\";\nimport { setToken } from \"./user\";\nexport const setUser = createAsyncThunk(\"SET_USER\", async (data, thunkAPI) => {\n  try {\n    const token = window.localStorage.getItem(\"branchToken\");\n\n    if (token) {\n      const req = await axios.get(`/api/users/logged`, {\n        headers: {\n          authorization: token\n        }\n      });\n      thunkAPI.dispatch(setToken(token));\n      thunkAPI.dispatch(setLogginTrue());\n      thunkAPI.dispatch(setCart({\n        id: req.data.id,\n        token\n      }));\n      thunkAPI.dispatch(getItems({\n        id: req.data.id,\n        token\n      }));\n      return req.data;\n    }\n\n    return {};\n  } catch (err) {\n    throw err;\n  }\n});\nexport const setUserVoid = createAsyncThunk(\"SET_USER_VOID\", async (data, thunkAPI) => {\n  try {\n    await axios.get(`/api/auth/logout`);\n    thunkAPI.dispatch(setToken(\"\"));\n    thunkAPI.dispatch(setLogginFalse());\n    thunkAPI.dispatch(setCart({}));\n    thunkAPI.dispatch(getItems({}));\n    return {};\n  } catch (err) {\n    throw err;\n  }\n});\nconst loggedUserReducer = createReducer({}, {\n  [setUser.fulfilled]: (state, action) => action.payload,\n  [setUserVoid.fulfilled]: (state, action) => action.payload\n});\nexport default loggedUserReducer;","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/store/loggedUserReducer.js"],"names":["createReducer","createAsyncThunk","axios","setLogginFalse","setLogginTrue","getItems","setCart","setToken","setUser","data","thunkAPI","token","window","localStorage","getItem","req","get","headers","authorization","dispatch","id","err","setUserVoid","loggedUserReducer","fulfilled","state","action","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,eAA9C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,UAAD,EAAa,OAAOQ,IAAP,EAAaC,QAAb,KAA0B;AAC5E,MAAI;AACF,UAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAd;;AAEA,QAAIH,KAAJ,EAAW;AACT,YAAMI,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,mBAAX,EAA+B;AAC/CC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEP;AAAjB;AADsC,OAA/B,CAAlB;AAIAD,MAAAA,QAAQ,CAACS,QAAT,CAAkBZ,QAAQ,CAACI,KAAD,CAA1B;AACAD,MAAAA,QAAQ,CAACS,QAAT,CAAkBf,aAAa,EAA/B;AACAM,MAAAA,QAAQ,CAACS,QAAT,CAAkBb,OAAO,CAAC;AAAEc,QAAAA,EAAE,EAAEL,GAAG,CAACN,IAAJ,CAASW,EAAf;AAAmBT,QAAAA;AAAnB,OAAD,CAAzB;AACAD,MAAAA,QAAQ,CAACS,QAAT,CAAkBd,QAAQ,CAAC;AAAEe,QAAAA,EAAE,EAAEL,GAAG,CAACN,IAAJ,CAASW,EAAf;AAAmBT,QAAAA;AAAnB,OAAD,CAA1B;AAEA,aAAOI,GAAG,CAACN,IAAX;AACD;;AACD,WAAO,EAAP;AACD,GAhBD,CAgBE,OAAOY,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CApBsC,CAAhC;AAsBP,OAAO,MAAMC,WAAW,GAAGrB,gBAAgB,CACzC,eADyC,EAEzC,OAAOQ,IAAP,EAAaC,QAAb,KAA0B;AACxB,MAAI;AACF,UAAMR,KAAK,CAACc,GAAN,CAAW,kBAAX,CAAN;AAEAN,IAAAA,QAAQ,CAACS,QAAT,CAAkBZ,QAAQ,CAAC,EAAD,CAA1B;AACAG,IAAAA,QAAQ,CAACS,QAAT,CAAkBhB,cAAc,EAAhC;AACAO,IAAAA,QAAQ,CAACS,QAAT,CAAkBb,OAAO,CAAC,EAAD,CAAzB;AACAI,IAAAA,QAAQ,CAACS,QAAT,CAAkBd,QAAQ,CAAC,EAAD,CAA1B;AAEA,WAAO,EAAP;AACD,GATD,CASE,OAAOgB,GAAP,EAAY;AACZ,UAAMA,GAAN;AACD;AACF,CAfwC,CAApC;AAiBP,MAAME,iBAAiB,GAAGvB,aAAa,CACrC,EADqC,EAErC;AACE,GAACQ,OAAO,CAACgB,SAAT,GAAqB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADjD;AAEE,GAACL,WAAW,CAACE,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAFrD,CAFqC,CAAvC;AAQA,eAAeJ,iBAAf","sourcesContent":["import { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setLogginFalse, setLogginTrue } from \"./authReducer\";\nimport { getItems } from \"./cartReducer\";\nimport { setCart } from \"./setCarReducer\";\n\nimport { setToken } from \"./user\";\n\nexport const setUser = createAsyncThunk(\"SET_USER\", async (data, thunkAPI) => {\n  try {\n    const token = window.localStorage.getItem(\"branchToken\");\n\n    if (token) {\n      const req = await axios.get(`/api/users/logged`, {\n        headers: { authorization: token },\n      });\n\n      thunkAPI.dispatch(setToken(token));\n      thunkAPI.dispatch(setLogginTrue());\n      thunkAPI.dispatch(setCart({ id: req.data.id, token }));\n      thunkAPI.dispatch(getItems({ id: req.data.id, token }));\n\n      return req.data;\n    }\n    return {};\n  } catch (err) {\n    throw err;\n  }\n});\n\nexport const setUserVoid = createAsyncThunk(\n  \"SET_USER_VOID\",\n  async (data, thunkAPI) => {\n    try {\n      await axios.get(`/api/auth/logout`);\n\n      thunkAPI.dispatch(setToken(\"\"));\n      thunkAPI.dispatch(setLogginFalse());\n      thunkAPI.dispatch(setCart({}));\n      thunkAPI.dispatch(getItems({}));\n\n      return {};\n    } catch (err) {\n      throw err;\n    }\n  }\n);\nconst loggedUserReducer = createReducer(\n  {},\n  {\n    [setUser.fulfilled]: (state, action) => action.payload,\n    [setUserVoid.fulfilled]: (state, action) => action.payload,\n  }\n);\n\nexport default loggedUserReducer;\n"]},"metadata":{},"sourceType":"module"}