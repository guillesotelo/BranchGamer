{"ast":null,"code":"import axios from \"axios\";\nexport const addOneToQuantity = (arr, id) => arr.map(item => {\n  if (item.productId === id) {\n    return { ...item,\n      quantity: item.quantity + 1\n    };\n  }\n\n  return item;\n});\nexport const removeOneFromQuantity = (arr, id) => arr.map(item => {\n  if (item.productId === id) {\n    return { ...item,\n      quantity: item.quantity - 1\n    };\n  }\n\n  return item;\n});\nexport const isInCarItems = (carItems, id) => {\n  return carItems.some(item => {\n    return item.productId === id;\n  });\n};\nexport const getProductFromDbAndSetQuantities = async array => {\n  const products = await Promise.all(array.map(x => axios.get(`/api/products/${x.productId}`)));\n  const r = products.map(x => x.data);\n  r.forEach((product, i) => {\n    product.quantity = array[i].quantity;\n  });\n  return r;\n};\nexport const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nexport const getCartItems = (id, token) => {\n  return axios.get(`/api/cart/items/${id}`, {\n    headers: {\n      authorization: token\n    }\n  }).then(res => res.data);\n};","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/utils/index.js"],"names":["axios","addOneToQuantity","arr","id","map","item","productId","quantity","removeOneFromQuantity","isInCarItems","carItems","some","getProductFromDbAndSetQuantities","array","products","Promise","all","x","get","r","data","forEach","product","i","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getCartItems","token","headers","authorization","then","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,GAAD,EAAMC,EAAN,KAC9BD,GAAG,CAACE,GAAJ,CAASC,IAAD,IAAU;AAChB,MAAIA,IAAI,CAACC,SAAL,KAAmBH,EAAvB,EAA2B;AACzB,WAAO,EAAE,GAAGE,IAAL;AAAWE,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAArC,KAAP;AACD;;AACD,SAAOF,IAAP;AACD,CALD,CADK;AAQP,OAAO,MAAMG,qBAAqB,GAAG,CAACN,GAAD,EAAMC,EAAN,KACnCD,GAAG,CAACE,GAAJ,CAASC,IAAD,IAAU;AAChB,MAAIA,IAAI,CAACC,SAAL,KAAmBH,EAAvB,EAA2B;AACzB,WAAO,EAAE,GAAGE,IAAL;AAAWE,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AAArC,KAAP;AACD;;AACD,SAAOF,IAAP;AACD,CALD,CADK;AAQP,OAAO,MAAMI,YAAY,GAAG,CAACC,QAAD,EAAWP,EAAX,KAAkB;AAC5C,SAAOO,QAAQ,CAACC,IAAT,CAAeN,IAAD,IAAU;AAC7B,WAAOA,IAAI,CAACC,SAAL,KAAmBH,EAA1B;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMS,gCAAgC,GAAG,MAAOC,KAAP,IAAiB;AAC/D,QAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBH,KAAK,CAACT,GAAN,CAAWa,CAAD,IAAOjB,KAAK,CAACkB,GAAN,CAAW,iBAAgBD,CAAC,CAACX,SAAU,EAAvC,CAAjB,CADqB,CAAvB;AAIA,QAAMa,CAAC,GAAGL,QAAQ,CAACV,GAAT,CAAca,CAAD,IAAOA,CAAC,CAACG,IAAtB,CAAV;AAEAD,EAAAA,CAAC,CAACE,OAAF,CAAU,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACxBD,IAAAA,OAAO,CAACf,QAAR,GAAmBM,KAAK,CAACU,CAAD,CAAL,CAAShB,QAA5B;AACD,GAFD;AAIA,SAAOY,CAAP;AACD,CAZM;AAcP,OAAO,MAAMK,qBAAqB,GAAIC,MAAD,IAAY;AAC/C,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAG,CAAC1B,EAAD,EAAK2B,KAAL,KAAe;AACzC,SAAO9B,KAAK,CAACkB,GAAN,CAAW,mBAAkBf,EAAG,EAAhC,EAAmC;AACxC4B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEF;AAAjB;AAD+B,GAAnC,EAEJG,IAFI,CAECC,GAAG,IAAIA,GAAG,CAACd,IAFZ,CAAP;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const addOneToQuantity = (arr, id) =>\n  arr.map((item) => {\n    if (item.productId === id) {\n      return { ...item, quantity: item.quantity + 1 };\n    }\n    return item;\n  });\n\nexport const removeOneFromQuantity = (arr, id) =>\n  arr.map((item) => {\n    if (item.productId === id) {\n      return { ...item, quantity: item.quantity - 1 };\n    }\n    return item;\n  });\n\nexport const isInCarItems = (carItems, id) => {\n  return carItems.some((item) => {\n    return item.productId === id;\n  });\n};\n\nexport const getProductFromDbAndSetQuantities = async (array) => {\n  const products = await Promise.all(\n    array.map((x) => axios.get(`/api/products/${x.productId}`))\n  );\n\n  const r = products.map((x) => x.data);\n\n  r.forEach((product, i) => {\n    product.quantity = array[i].quantity;\n  });\n\n  return r;\n};\n\nexport const capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nexport const getCartItems = (id, token) => {\n  return axios.get(`/api/cart/items/${id}`, {\n    headers: { authorization: token },\n  }).then(res => res.data)\n}\n"]},"metadata":{},"sourceType":"module"}