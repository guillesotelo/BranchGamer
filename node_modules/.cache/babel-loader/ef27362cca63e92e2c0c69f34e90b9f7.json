{"ast":null,"code":"var _jsxFileName = \"/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/components/LoginGoogle.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUser } from \"../store/loggedUserReducer\";\nimport { setUserVoid } from \"../store/loggedUserReducer\";\nimport \"../containers/App.css\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { setGoogleTrue, setGooglefalse } from \"../store/googleReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"1000128027001-1hm0fsrjmpmkldp3qeb8uvci632jp77i.apps.googleusercontent.com\";\nexport function LoginGoogle() {\n  _s();\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const dispatch = useDispatch();\n\n  const onLoginSuccess = res => {\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    const value = {\n      name: res.profileObj.givenName,\n      email: res.profileObj.email,\n      password: res.profileObj.googleId\n    };\n    axios.post(\"/api/auth/login\", value).then(res => res.data).then(data => {\n      window.localStorage.setItem(\"branchToken\", `Bearer ${data.token}`);\n      dispatch(setUser());\n      dispatch(setGoogleTrue());\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onLoginFailure = res => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  function logOut() {\n    window.localStorage.removeItem(\"branchToken\");\n    dispatch(setUserVoid());\n  }\n\n  const onSignoutSuccess = () => {\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    window.localStorage.removeItem(\"branchToken\");\n    dispatch(setUserVoid());\n    dispatch(setGooglefalse());\n    alert(\"Ha cerrado sesion correctamente\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showloginButton ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Loguearme con Google\",\n      className: \"log-btn\",\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null, showlogoutButton ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: clientId,\n      buttonText: \"Desloguearme\",\n      onClick: logOut,\n      onLogoutSuccess: onSignoutSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginGoogle, \"xckdJ++fT0UOdTzAHDCYZRydYdQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginGoogle;\nexport default LoginGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginGoogle\");","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/components/LoginGoogle.jsx"],"names":["React","useState","useDispatch","useSelector","axios","useHistory","setUser","setUserVoid","GoogleLogin","GoogleLogout","setGoogleTrue","setGooglefalse","clientId","LoginGoogle","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","dispatch","onLoginSuccess","res","value","name","profileObj","givenName","email","password","googleId","post","then","data","window","localStorage","setItem","token","catch","err","console","log","onLoginFailure","logOut","removeItem","onSignoutSuccess","clear","alert"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUser } from \"../store/loggedUserReducer\";\nimport { setUserVoid } from \"../store/loggedUserReducer\";\n\nimport \"../containers/App.css\";\n\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { setGoogleTrue, setGooglefalse } from \"../store/googleReducer\";\n\nconst clientId =\n  \"1000128027001-1hm0fsrjmpmkldp3qeb8uvci632jp77i.apps.googleusercontent.com\";\n\nexport function LoginGoogle() {\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n  const dispatch = useDispatch();\n  const onLoginSuccess = (res) => {\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n\n    const value = {\n      name: res.profileObj.givenName,\n      email: res.profileObj.email,\n      password: res.profileObj.googleId,\n    };\n    axios\n      .post(\"/api/auth/login\", value)\n      .then((res) => res.data)\n      .then((data) => {\n        window.localStorage.setItem(\"branchToken\", `Bearer ${data.token}`);\n        dispatch(setUser());\n\n        dispatch(setGoogleTrue());\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n  function logOut() {\n    window.localStorage.removeItem(\"branchToken\");\n    dispatch(setUserVoid());\n  }\n\n  const onSignoutSuccess = () => {\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    window.localStorage.removeItem(\"branchToken\");\n    dispatch(setUserVoid());\n    dispatch(setGooglefalse());\n    alert(\"Ha cerrado sesion correctamente\");\n  };\n\n  return (\n    <div>\n      {showloginButton ? (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Loguearme con Google\"\n          className=\"log-btn\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Desloguearme\"\n          onClick={logOut}\n          onLogoutSuccess={onSignoutSuccess}\n        ></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default LoginGoogle;\n"]},"metadata":{},"sourceType":"module"}