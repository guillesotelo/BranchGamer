{"ast":null,"code":"var _jsxFileName = \"/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/components/RegisterGoogle.jsx\",\n    _s = $RefreshSig$();\n\n/** @format */\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUser } from \"../store/loggedUserReducer\";\nimport { setGoogleTrue, setGooglefalse } from \"../store/googleReducer\";\nimport \"../containers/App.css\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"1000128027001-1hm0fsrjmpmkldp3qeb8uvci632jp77i.apps.googleusercontent.com\";\n\nfunction RegisterGoogle() {\n  _s();\n\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onLoginSuccess = res => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n    const value = {\n      name: res.profileObj.givenName,\n      email: res.profileObj.email,\n      password: res.profileObj.googleId\n    };\n    axios.post(\"/api/auth/register\", value).then(res => res.data).then(() => {\n      return axios.post(\"/api/auth/login\", value);\n    }).then(res => res.data).then(data => {\n      window.localStorage.setItem(\"branchToken\", `Bearer ${data.token}`);\n      dispatch(setUser());\n      dispatch(setGoogleTrue());\n      history.push(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onLoginFailure = res => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"Has sido registrado satisfactoriamente !\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    dispatch(setGooglefalse());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showloginButton ? /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Registrarme con Google\",\n      className: \"log-btn\",\n      onSuccess: onLoginSuccess,\n      onFailure: onLoginFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : null, showlogoutButton ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: clientId,\n      buttonText: \"Desloguearme\",\n      onLogoutSuccess: onSignoutSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterGoogle, \"35CJyqYeyhf5Ehm7273llrdded0=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = RegisterGoogle;\nexport default RegisterGoogle;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterGoogle\");","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/components/RegisterGoogle.jsx"],"names":["React","useState","useDispatch","useSelector","axios","useHistory","setUser","setGoogleTrue","setGooglefalse","GoogleLogin","GoogleLogout","clientId","RegisterGoogle","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","history","dispatch","onLoginSuccess","res","console","log","profileObj","value","name","givenName","email","password","googleId","post","then","data","window","localStorage","setItem","token","push","catch","err","onLoginFailure","onSignoutSuccess","alert","clear"],"mappings":"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","sourcesContent":["/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUser } from \"../store/loggedUserReducer\";\nimport { setGoogleTrue, setGooglefalse } from \"../store/googleReducer\";\nimport \"../containers/App.css\";\n\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\n\nconst clientId =\n  \"1000128027001-1hm0fsrjmpmkldp3qeb8uvci632jp77i.apps.googleusercontent.com\";\n\nfunction RegisterGoogle() {\n  const [showloginButton, setShowloginButton] = useState(true);\n  const [showlogoutButton, setShowlogoutButton] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onLoginSuccess = (res) => {\n    console.log(\"Login Success:\", res.profileObj);\n    setShowloginButton(false);\n    setShowlogoutButton(true);\n   \n    const value = {\n      name: res.profileObj.givenName,\n      email: res.profileObj.email,\n      password: res.profileObj.googleId,\n    };\n    axios\n      .post(\"/api/auth/register\", value)\n      .then((res) => res.data)\n      .then(() => {\n        return axios.post(\"/api/auth/login\", value);\n      })\n      .then((res) => res.data)\n      .then((data) => {\n        window.localStorage.setItem(\"branchToken\", `Bearer ${data.token}`);\n        dispatch(setUser());\n        dispatch(setGoogleTrue())\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const onLoginFailure = (res) => {\n    console.log(\"Login Failed:\", res);\n  };\n\n  const onSignoutSuccess = () => {\n    alert(\"Has sido registrado satisfactoriamente !\");\n    console.clear();\n    setShowloginButton(true);\n    setShowlogoutButton(false);\n    dispatch(setGooglefalse())\n\n  };\n\n  return (\n    <div>\n      {showloginButton ? (\n        <GoogleLogin\n          clientId={clientId}\n          buttonText=\"Registrarme con Google\"\n          className=\"log-btn\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n        />\n      ) : null}\n\n      {showlogoutButton ? (\n        <GoogleLogout\n          clientId={clientId}\n          buttonText=\"Desloguearme\"\n          onLogoutSuccess={onSignoutSuccess}\n        ></GoogleLogout>\n      ) : null}\n    </div>\n  );\n}\nexport default RegisterGoogle;\n"]},"metadata":{},"sourceType":"module"}