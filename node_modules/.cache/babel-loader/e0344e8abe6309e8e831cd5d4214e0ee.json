{"ast":null,"code":"import { createAction, createAsyncThunk, createReducer } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; //productos\n\nexport const setProductos = createAction(\"set_Productos\");\nexport const productosReducer = createReducer([], {\n  [setProductos]: (state, action) => action.payload\n}); //un solo producto \n\nexport const setUnSoloProducto = createAction(\"set_unSoloProducto\");\nexport const unSoloProductoReducer = createReducer([], {\n  [setUnSoloProducto]: (state, action) => action.payload\n}); //buscar producto\n\nexport const buscarProducto = createAction(\"set_buscarProducto\");\nexport const buscarProductoReducer = createReducer(\"\", {\n  [buscarProducto]: (state, action) => action.payload\n}); //Crear producto / admin\n\nexport const crearProducto = createAsyncThunk(\"CREAR_PRODUCTO\", producto => {\n  const {\n    productInput,\n    token\n  } = producto;\n  const {\n    title,\n    marca,\n    categoryId,\n    price,\n    description,\n    quantity,\n    colors,\n    imageUrl\n  } = productInput;\n  return axios.post(\"/api/products/\", {\n    title: title,\n    marca: marca,\n    categoryId: Number(categoryId),\n    price: Number(price),\n    description: description,\n    quantity: Number(quantity),\n    colors: colors.split(\", \"),\n    imageUrl: imageUrl\n  }, {\n    headers: {\n      authorization: token\n    }\n  }).then(res => res.data);\n});\nexport const crearProductoReducer = createReducer({}, {\n  [crearProducto.fulfilled]: (state, action) => action.payload\n}); // Modificar producto existente\n\nexport const modificarProducto = createAsyncThunk(\"MODIFICAR_PRODUCTO\", producto => {\n  const {\n    inputProduct,\n    productId,\n    token\n  } = producto;\n  return axios.put(`/api/products/${productId}`, inputProduct, {\n    headers: {\n      authorization: token\n    }\n  });\n});\nexport const modificarProductoReducer = createReducer(\"\", {\n  [modificarProducto]: (state, action) => action.payload\n});","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/store/productos.js"],"names":["createAction","createAsyncThunk","createReducer","axios","setProductos","productosReducer","state","action","payload","setUnSoloProducto","unSoloProductoReducer","buscarProducto","buscarProductoReducer","crearProducto","producto","productInput","token","title","marca","categoryId","price","description","quantity","colors","imageUrl","post","Number","split","headers","authorization","then","res","data","crearProductoReducer","fulfilled","modificarProducto","inputProduct","productId","put","modificarProductoReducer"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,kBAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAGJ,YAAY,CAAC,eAAD,CAAjC;AACP,OAAO,MAAMK,gBAAgB,GAAGH,aAAa,CAAC,EAAD,EAAK;AAC9C,GAACE,YAAD,GAAgB,CAACE,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADI,CAAL,CAAtC,C,CAIP;;AACA,OAAO,MAAMC,iBAAiB,GAAGT,YAAY,CAAC,oBAAD,CAAtC;AACP,OAAO,MAAMU,qBAAqB,GAAGR,aAAa,CAAC,EAAD,EAAK;AACnD,GAACO,iBAAD,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADI,CAAL,CAA3C,C,CAIP;;AACA,OAAO,MAAMG,cAAc,GAAGX,YAAY,CAAC,oBAAD,CAAnC;AACP,OAAO,MAAMY,qBAAqB,GAAGV,aAAa,CAAC,EAAD,EAAK;AACnD,GAACS,cAAD,GAAkB,CAACL,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADO,CAAL,CAA3C,C,CAIP;;AACA,OAAO,MAAMK,aAAa,GAAGZ,gBAAgB,CAAC,gBAAD,EAAoBa,QAAD,IAAY;AACxE,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAwBF,QAA9B;AACA,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA,QAA/C;AAAyDC,IAAAA,MAAzD;AAAiEC,IAAAA;AAAjE,MAA6ET,YAAnF;AACA,SAAOZ,KAAK,CAACsB,IAAN,CAAW,gBAAX,EAA6B;AAChCR,IAAAA,KAAK,EAAGA,KADwB;AAEhCC,IAAAA,KAAK,EAAGA,KAFwB;AAGhCC,IAAAA,UAAU,EAAGO,MAAM,CAACP,UAAD,CAHa;AAIhCC,IAAAA,KAAK,EAAGM,MAAM,CAACN,KAAD,CAJkB;AAKhCC,IAAAA,WAAW,EAAGA,WALkB;AAMhCC,IAAAA,QAAQ,EAAGI,MAAM,CAACJ,QAAD,CANe;AAOhCC,IAAAA,MAAM,EAAGA,MAAM,CAACI,KAAP,CAAa,IAAb,CAPuB;AAQhCH,IAAAA,QAAQ,EAAGA;AARqB,GAA7B,EASJ;AACCI,IAAAA,OAAO,EAAG;AAACC,MAAAA,aAAa,EAAGb;AAAjB;AADX,GATI,EAYNc,IAZM,CAYDC,GAAG,IAAGA,GAAG,CAACC,IAZT,CAAP;AAaH,CAhB4C,CAAtC;AAiBP,OAAO,MAAMC,oBAAoB,GAAG/B,aAAa,CAAC,EAAD,EAAI;AACjD,GAACW,aAAa,CAACqB,SAAf,GAA4B,CAAC5B,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADL,CAAJ,CAA1C,C,CAIP;;AACA,OAAO,MAAM2B,iBAAiB,GAAGlC,gBAAgB,CAAC,oBAAD,EAAwBa,QAAD,IAAY;AAChF,QAAM;AAACsB,IAAAA,YAAD;AAAeC,IAAAA,SAAf;AAA0BrB,IAAAA;AAA1B,MAAmCF,QAAzC;AACA,SAAOX,KAAK,CAACmC,GAAN,CAAW,iBAAgBD,SAAU,EAArC,EAAwCD,YAAxC,EAAsD;AACzDR,IAAAA,OAAO,EAAG;AAACC,MAAAA,aAAa,EAAGb;AAAjB;AAD+C,GAAtD,CAAP;AAGH,CALgD,CAA1C;AAMP,OAAO,MAAMuB,wBAAwB,GAAGrC,aAAa,CAAC,EAAD,EAAK;AACtD,GAACiC,iBAAD,GAAqB,CAAC7B,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADO,CAAL,CAA9C","sourcesContent":["import { createAction, createAsyncThunk, createReducer } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\n//productos\nexport const setProductos = createAction(\"set_Productos\")\nexport const productosReducer = createReducer([], {\n    [setProductos]: (state, action) => action.payload\n})\n\n//un solo producto \nexport const setUnSoloProducto = createAction(\"set_unSoloProducto\")\nexport const unSoloProductoReducer = createReducer([], {\n    [setUnSoloProducto]: (state, action) => action.payload\n})\n\n//buscar producto\nexport const buscarProducto = createAction(\"set_buscarProducto\")\nexport const buscarProductoReducer = createReducer(\"\", {\n    [buscarProducto]: (state, action) => action.payload\n})\n\n//Crear producto / admin\nexport const crearProducto = createAsyncThunk(\"CREAR_PRODUCTO\", (producto)=>{\n    const {productInput, token} = producto\n    const {title, marca, categoryId, price, description, quantity, colors, imageUrl} = productInput\n    return axios.post(\"/api/products/\", {\n        title : title, \n        marca : marca, \n        categoryId : Number(categoryId),\n        price : Number(price),\n        description : description, \n        quantity : Number(quantity),\n        colors : colors.split(\", \"),\n        imageUrl : imageUrl\n    }, {\n        headers : {authorization : token}\n    })\n    .then(res =>res.data)\n})\nexport const crearProductoReducer = createReducer({},{\n    [crearProducto.fulfilled] : (state, action) => action.payload\n})\n\n// Modificar producto existente\nexport const modificarProducto = createAsyncThunk(\"MODIFICAR_PRODUCTO\", (producto)=>{\n    const {inputProduct, productId, token} = producto\n    return axios.put(`/api/products/${productId}`, inputProduct, {\n        headers : {authorization : token}\n    })\n})\nexport const modificarProductoReducer = createReducer(\"\", {\n    [modificarProducto]: (state, action) => action.payload\n})"]},"metadata":{},"sourceType":"module"}