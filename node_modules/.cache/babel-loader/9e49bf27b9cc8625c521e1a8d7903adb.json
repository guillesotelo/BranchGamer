{"ast":null,"code":"import axios from \"axios\";\nexport default async function mergeCarritos(cartDb, cartLocal, token, cartId) {\n  const productsIds = cartDb.map(x => x.productId);\n  let promises = [];\n  cartLocal.forEach(x => {\n    let cantidad = x.quantity;\n\n    if (!productsIds.includes(x.productId)) {\n      const body = {\n        carritoId: cartId,\n        productId: x.productId\n      };\n      promises.push(axios.post(\"/api/cart/add\", body, {\n        headers: {\n          authorization: token\n        }\n      }));\n      cantidad--;\n    }\n\n    for (let i = 0; i < cantidad; i++) {\n      const body = {\n        carritoId: cartId,\n        productId: x.productId,\n        type: \"add\"\n      };\n      promises.push(axios.put(`/api/cart`, body, {\n        headers: {\n          authorization: token\n        }\n      }));\n    }\n  });\n  await Promise.all(promises);\n  const req = await axios.get(`/api/cart/items/${cartId}`, {\n    headers: {\n      authorization: token\n    }\n  });\n  window.localStorage.setItem(\"cart-items-no-log\", JSON.stringify([]));\n  return req.data;\n}","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/utils/mergeCarritos.js"],"names":["axios","mergeCarritos","cartDb","cartLocal","token","cartId","productsIds","map","x","productId","promises","forEach","cantidad","quantity","includes","body","carritoId","push","post","headers","authorization","i","type","put","Promise","all","req","get","window","localStorage","setItem","JSON","stringify","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,aAAf,CAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,KAAhD,EAAuDC,MAAvD,EAA+D;AAC5E,QAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAACC,SAApB,CAApB;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAP,EAAAA,SAAS,CAACQ,OAAV,CAAmBH,CAAD,IAAO;AACvB,QAAII,QAAQ,GAAGJ,CAAC,CAACK,QAAjB;;AACA,QAAI,CAACP,WAAW,CAACQ,QAAZ,CAAqBN,CAAC,CAACC,SAAvB,CAAL,EAAwC;AACtC,YAAMM,IAAI,GAAG;AACXC,QAAAA,SAAS,EAAEX,MADA;AAEXI,QAAAA,SAAS,EAAED,CAAC,CAACC;AAFF,OAAb;AAIAC,MAAAA,QAAQ,CAACO,IAAT,CACEjB,KAAK,CAACkB,IAAN,CAAW,eAAX,EAA4BH,IAA5B,EAAkC;AAChCI,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEhB;AAAjB;AADuB,OAAlC,CADF;AAKAQ,MAAAA,QAAQ;AACT;;AAED,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,QAApB,EAA8BS,CAAC,EAA/B,EAAmC;AACjC,YAAMN,IAAI,GAAG;AACXC,QAAAA,SAAS,EAAEX,MADA;AAEXI,QAAAA,SAAS,EAAED,CAAC,CAACC,SAFF;AAGXa,QAAAA,IAAI,EAAE;AAHK,OAAb;AAMAZ,MAAAA,QAAQ,CAACO,IAAT,CACEjB,KAAK,CAACuB,GAAN,CAAW,WAAX,EAAuBR,IAAvB,EAA6B;AAC3BI,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEhB;AAAjB;AADkB,OAA7B,CADF;AAKD;AACF,GA5BD;AA8BA,QAAMoB,OAAO,CAACC,GAAR,CAAYf,QAAZ,CAAN;AAEA,QAAMgB,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAW,mBAAkBtB,MAAO,EAApC,EAAuC;AACvDc,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB;AAAjB;AAD8C,GAAvC,CAAlB;AAIAwB,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,EAAiDC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAjD;AACA,SAAON,GAAG,CAACO,IAAX;AACD","sourcesContent":["import axios from \"axios\";\n\nexport default async function mergeCarritos(cartDb, cartLocal, token, cartId) {\n  const productsIds = cartDb.map((x) => x.productId);\n  let promises = [];\n\n  cartLocal.forEach((x) => {\n    let cantidad = x.quantity;\n    if (!productsIds.includes(x.productId)) {\n      const body = {\n        carritoId: cartId,\n        productId: x.productId,\n      };\n      promises.push(\n        axios.post(\"/api/cart/add\", body, {\n          headers: { authorization: token },\n        })\n      );\n      cantidad--;\n    }\n\n    for (let i = 0; i < cantidad; i++) {\n      const body = {\n        carritoId: cartId,\n        productId: x.productId,\n        type: \"add\",\n      };\n\n      promises.push(\n        axios.put(`/api/cart`, body, {\n          headers: { authorization: token },\n        })\n      );\n    }\n  });\n\n  await Promise.all(promises);\n\n  const req = await axios.get(`/api/cart/items/${cartId}`, {\n    headers: { authorization: token },\n  });\n\n  window.localStorage.setItem(\"cart-items-no-log\", JSON.stringify([]));\n  return req.data;\n}\n"]},"metadata":{},"sourceType":"module"}