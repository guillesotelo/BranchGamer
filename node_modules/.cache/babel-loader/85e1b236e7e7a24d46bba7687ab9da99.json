{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\n\nconst useLocalStorage = (key, defaultValue, serialize = JSON.stringify, deserialize = JSON.parse) => {\n  _s();\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return [...state, action.payload];\n\n      case \"remove\":\n        return state.filter(item => item.productId !== action.payload.id);\n\n      case \"quantityAdd\":\n        return state.map(item => {\n          if (item.productId === action.payload.id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        });\n\n      case \"quantityRemove\":\n        return state.map(item => {\n          if (item.productId === action.payload.id) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          }\n\n          return item;\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  const init = () => deserialize(window.localStorage.getItem(key)) || defaultValue;\n\n  const [state, dispatch] = React.useReducer(reducer, defaultValue, init);\n  React.useEffect(() => {\n    window.localStorage.setItem(key, serialize(state));\n    console.log('SE HIZO');\n  }, [key, serialize, state]);\n  return [state, dispatch];\n};\n\n_s(useLocalStorage, \"EnKDweul/v+AKXs8F5fZM+eQAIs=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/branch-and-gamer/src/hooks/useLocalStorage.js"],"names":["React","useLocalStorage","key","defaultValue","serialize","JSON","stringify","deserialize","parse","reducer","state","action","type","payload","filter","item","productId","id","map","quantity","init","window","localStorage","getItem","dispatch","useReducer","useEffect","setItem","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CACtBC,GADsB,EAEtBC,YAFsB,EAGtBC,SAAS,GAAGC,IAAI,CAACC,SAHK,EAItBC,WAAW,GAAGF,IAAI,CAACG,KAJG,KAKnB;AAAA;;AACH,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,KAAL;AACE,eAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,WAAK,QAAL;AACE,eAAOH,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAAL,KAAmBL,MAAM,CAACE,OAAP,CAAeI,EAAzD,CAAP;;AACF,WAAK,aAAL;AACE,eAAOP,KAAK,CAACQ,GAAN,CAAWH,IAAD,IAAU;AACzB,cAAIA,IAAI,CAACC,SAAL,KAAmBL,MAAM,CAACE,OAAP,CAAeI,EAAtC,EAA0C;AACxC,mBAAO,EAAE,GAAGF,IAAL;AAAWI,cAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB;AAArC,aAAP;AACD;;AACD,iBAAOJ,IAAP;AACD,SALM,CAAP;;AAMF,WAAK,gBAAL;AACE,eAAOL,KAAK,CAACQ,GAAN,CAAWH,IAAD,IAAU;AACzB,cAAIA,IAAI,CAACC,SAAL,KAAmBL,MAAM,CAACE,OAAP,CAAeI,EAAtC,EAA0C;AACxC,mBAAO,EAAE,GAAGF,IAAL;AAAWI,cAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAAL,GAAgB;AAArC,aAAP;AACD;;AACD,iBAAOJ,IAAP;AACD,SALM,CAAP;;AAMF;AACE,eAAOL,KAAP;AApBJ;AAsBD,GAvBD;;AAwBA,QAAMU,IAAI,GAAG,MACXb,WAAW,CAACc,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BrB,GAA5B,CAAD,CAAX,IAAiDC,YADnD;;AAGA,QAAM,CAACO,KAAD,EAAQc,QAAR,IAAoBxB,KAAK,CAACyB,UAAN,CAAiBhB,OAAjB,EAA0BN,YAA1B,EAAwCiB,IAAxC,CAA1B;AAEApB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AACpBL,IAAAA,MAAM,CAACC,YAAP,CAAoBK,OAApB,CAA4BzB,GAA5B,EAAiCE,SAAS,CAACM,KAAD,CAA1C;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAHD,EAGG,CAAC3B,GAAD,EAAME,SAAN,EAAiBM,KAAjB,CAHH;AAKA,SAAO,CAACA,KAAD,EAAQc,QAAR,CAAP;AACD,CAzCD;;GAAMvB,e;;AA2CN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\n\nconst useLocalStorage = (\n  key,\n  defaultValue,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse\n) => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"add\":\n        return [...state, action.payload];\n      case \"remove\":\n        return state.filter((item) => item.productId !== action.payload.id);\n      case \"quantityAdd\":\n        return state.map((item) => {\n          if (item.productId === action.payload.id) {\n            return { ...item, quantity: item.quantity + 1 };\n          }\n          return item;\n        });\n      case \"quantityRemove\":\n        return state.map((item) => {\n          if (item.productId === action.payload.id) {\n            return { ...item, quantity: item.quantity + 1 };\n          }\n          return item;\n        });\n      default:\n        return state;\n    }\n  };\n  const init = () =>\n    deserialize(window.localStorage.getItem(key)) || defaultValue;\n\n  const [state, dispatch] = React.useReducer(reducer, defaultValue, init);\n\n  React.useEffect(() => {\n    window.localStorage.setItem(key, serialize(state));\n    console.log('SE HIZO')\n  }, [key, serialize, state]);\n\n  return [state, dispatch];\n};\n\nexport default useLocalStorage;\n"]},"metadata":{},"sourceType":"module"}